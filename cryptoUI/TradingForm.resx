<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>